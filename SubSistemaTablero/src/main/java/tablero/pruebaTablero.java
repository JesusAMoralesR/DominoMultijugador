package tablero;

import ObjetosDeEventos.Ficha;
import java.awt.Color;
import java.awt.Component;
import java.awt.ComponentOrientation;
import java.awt.Dimension;
import java.awt.Font;
import java.awt.GridBagConstraints;
import java.awt.Insets;
import java.awt.Point;
import java.util.HashMap;
import java.util.Map;
import javax.swing.BorderFactory;
import javax.swing.JLabel;
import javax.swing.SwingConstants;

/**
 *
 * @author tacot
 */
public class pruebaTablero extends javax.swing.JFrame {

    private static final java.util.logging.Logger logger = java.util.logging.Logger.getLogger(pruebaTablero.class.getName());

    private final Map<Point, Component> componentesEnPantalla = new HashMap<>();

    /**
     * Creates new form pruebaTablero
     */
    public pruebaTablero() {
        initComponents();
        Color colorPersonalizado = new Color(161, 136, 93);
        for (int i = 10; i > -1; i--) {
            for (int j = 0; j < 20; j++) {
                GridBagConstraints gbc = new GridBagConstraints();
                gbc.gridx = j;
                gbc.gridy = 10 - i;
                gbc.weightx = 1.0;
                gbc.weighty = 1.0;
                gbc.fill = GridBagConstraints.BOTH;
                JLabel label = new JLabel(String.valueOf(i + "," + j), SwingConstants.CENTER);
                label.setPreferredSize(new Dimension(48, 34));
                label.setFont(new Font("Arial", Font.BOLD, 14));
                label.setBorder(BorderFactory.createLineBorder(Color.BLACK));
                label.setOpaque(false);
                label.setBackground((i + j) % 2 == 0 ? Color.LIGHT_GRAY : Color.WHITE);

                componentesEnPantalla.put(new Point(j, i), label);

                PanelPrincipal.add(label, gbc);

            }
        }

        GridBagConstraints gbc = new GridBagConstraints();
        gbc.gridx = 5;           // columna
        gbc.gridy = 4;           // empieza en la fila superior
        gbc.gridheight = 3;      // ocupa 3 filas
        gbc.gridwidth = 1;       // solo una columna
        gbc.weightx = 1.0;
        gbc.weighty = 1.0;
        gbc.fill = GridBagConstraints.BOTH;

// Márgenes: arriba y abajo 25% de celda
        gbc.insets = new Insets(20, 0, 20, 0);  // (arriba, izq, abajo, der)

        JLabel fichaMula = new JLabel("MULA", SwingConstants.CENTER);
        fichaMula.setFont(new Font("Arial", Font.BOLD, 14));
        fichaMula.setBorder(BorderFactory.createLineBorder(Color.BLACK));
        fichaMula.setOpaque(true);
        fichaMula.setBackground(Color.ORANGE);

// remplazas las 3 celdas ocupadas
        Component espacio52 = componentesEnPantalla.get(new Point(5, 4));
        Component espacio53 = componentesEnPantalla.get(new Point(5, 5));
        Component espacio54 = componentesEnPantalla.get(new Point(5, 6));

        componentesEnPantalla.replace(new Point(5, 4), fichaMula);
        componentesEnPantalla.replace(new Point(5, 5), fichaMula);
        componentesEnPantalla.replace(new Point(5, 6), fichaMula);

        PanelPrincipal.remove(espacio52);
        PanelPrincipal.remove(espacio53);
        PanelPrincipal.remove(espacio54);

        PanelPrincipal.add(fichaMula, gbc);
        
        
        
        gbc.gridx = 8;           // columna
        gbc.gridy = 6;           // empieza en la fila superior
        gbc.gridheight = 1;      // ocupa 3 filas
        gbc.gridwidth = 3;       // solo una columna
        gbc.weightx = 1.0;
        gbc.weighty = 1.0;
        gbc.fill = GridBagConstraints.BOTH;

// Márgenes: arriba y abajo 25% de celda
        gbc.insets = new Insets(0, 30, 0, 30);  // (arriba, izq, abajo, der)

        JLabel fichaMula2 = new JLabel("MULA", SwingConstants.CENTER);
        fichaMula2.setFont(new Font("Arial", Font.BOLD, 14));
        fichaMula2.setBorder(BorderFactory.createLineBorder(Color.BLACK));
        fichaMula2.setOpaque(true);
        fichaMula2.setBackground(Color.ORANGE);

// remplazas las 3 celdas ocupadas
        Component espacio84 = componentesEnPantalla.get(new Point(8, 4));
        Component espacio94 = componentesEnPantalla.get(new Point(9, 4));
        Component espacio104 = componentesEnPantalla.get(new Point(10, 4));

        componentesEnPantalla.replace(new Point(8, 4), fichaMula);
        componentesEnPantalla.replace(new Point(9, 4), fichaMula);
        componentesEnPantalla.replace(new Point(10, 4), fichaMula);

        PanelPrincipal.remove(espacio84);
        PanelPrincipal.remove(espacio94);
        PanelPrincipal.remove(espacio104);

        PanelPrincipal.add(fichaMula2, gbc);

    }

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The content of this method is always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        PanelPrincipal = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        PanelPrincipal.setBackground(new java.awt.Color(0, 255, 255));
        PanelPrincipal.setPreferredSize(new java.awt.Dimension(1024, 380));
        PanelPrincipal.setLayout(new java.awt.GridBagLayout());

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(PanelPrincipal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(PanelPrincipal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ReflectiveOperationException | javax.swing.UnsupportedLookAndFeelException ex) {
            logger.log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> new pruebaTablero().setVisible(true));
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel PanelPrincipal;
    // End of variables declaration//GEN-END:variables
}
